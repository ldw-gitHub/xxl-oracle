<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.job.admin.dao.XxlJobLogDao">
	
	<resultMap id="XxlJobLog" type="com.xxl.job.admin.core.model.XxlJobLog" >
		<result column="id" property="id" jdbcType="INTEGER" />

		<result column="job_group" property="jobGroup" jdbcType="INTEGER" />
		<result column="job_id" property="jobId" jdbcType="INTEGER" />

		<result column="executor_address" property="executorAddress" jdbcType="VARCHAR" />
		<result column="executor_handler" property="executorHandler" jdbcType="VARCHAR" />
	    <result column="executor_param" property="executorParam" jdbcType="VARCHAR" />
		<result column="executor_sharding_param" property="executorShardingParam" jdbcType="VARCHAR" />
		<result column="executor_fail_retry_count" property="executorFailRetryCount" jdbcType="INTEGER" />
	    
	    <result column="trigger_time" property="triggerTime" jdbcType="TIMESTAMP" />
	    <result column="trigger_code" property="triggerCode" jdbcType="INTEGER" />
	    <result column="trigger_msg" property="triggerMsg" jdbcType="VARCHAR" />
	    
	    <result column="handle_time" property="handleTime" jdbcType="TIMESTAMP" />
	    <result column="handle_code" property="handleCode" jdbcType="INTEGER" />
	    <result column="handle_msg" property="handleMsg" jdbcType="VARCHAR" />

		<result column="alarm_status" property="alarmStatus" jdbcType="INTEGER" />
	</resultMap>

	<sql id="Base_Column_List">
		t.id,
		t.job_group,
		t.job_id,
		t.executor_address,
		t.executor_handler,
		t.executor_param,
		t.executor_sharding_param,
		t.executor_fail_retry_count,
		t.trigger_time,
		t.trigger_code,
		t.trigger_msg,
		t.handle_time,
		t.handle_code,
		t.handle_msg,
		t.alarm_status
	</sql>
	
	<select id="pageList" resultMap="XxlJobLog">
		SELECT <include refid="Base_Column_List" />
		FROM SZBDC_TRIGGER_LOG t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobId==0 and jobGroup gt 0">
				AND t.job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND t.job_id = #{jobId}
			</if>
			<if test="triggerTimeStart != null">
				AND t.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != null">
				AND t.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
			<if test="logStatus == 1" >
				AND t.handle_code = 200
			</if>
			<if test="logStatus == 2" >
				AND (
					t.trigger_code NOT IN (0, 200) OR
					t.handle_code NOT IN (0, 200)
				)
			</if>
			<if test="logStatus == 3" >
				AND t.trigger_code = 200
				AND t.handle_code = 0
			</if>
		</trim>
		ORDER BY t.trigger_time DESC
	</select>
	
	<select id="pageListCount" resultType="int">
		SELECT count(1)
		FROM SZBDC_TRIGGER_LOG t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobId==0 and jobGroup gt 0">
				AND t.job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND t.job_id = #{jobId}
			</if>
			<if test="triggerTimeStart != null">
				AND t.trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != null">
				AND t.trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
			<if test="logStatus == 1" >
				AND t.handle_code = 200
			</if>
			<if test="logStatus == 2" >
				AND (
					t.trigger_code NOT IN (0, 200) OR
					t.handle_code NOT IN (0, 200)
				)
			</if>
			<if test="logStatus == 3" >
				AND t.trigger_code = 200
				AND t.handle_code = 0
			</if>
		</trim>
	</select>
	
	<select id="load" parameterType="java.lang.Long" resultMap="XxlJobLog">
		SELECT <include refid="Base_Column_List" />
		FROM SZBDC_TRIGGER_LOG t
		WHERE t.id = #{id}
	</select>

	
	<insert id="save" parameterType="com.xxl.job.admin.core.model.XxlJobLog">
	    <selectKey keyProperty="id" resultType="long" order="BEFORE">
			SELECT S_SZBDC_TRIGGER_LOG.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO SZBDC_TRIGGER_LOG (
		    id,
			job_group,
			job_id,
			trigger_time,
			trigger_code,
			handle_code
		) VALUES (
		    #{id,jdbcType=INTEGER},
			#{jobGroup,jdbcType=INTEGER},
			#{jobId,jdbcType=INTEGER},
			#{triggerTime,jdbcType=TIMESTAMP},
			#{triggerCode,jdbcType=INTEGER},
			#{handleCode,jdbcType=INTEGER}
		)
		<!--<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() 
		</selectKey>-->
	</insert>

	<update id="updateTriggerInfo" >
		UPDATE SZBDC_TRIGGER_LOG
		SET
			trigger_time= #{triggerTime,jdbcType=TIMESTAMP},
			trigger_code= #{triggerCode,jdbcType=INTEGER},
			trigger_msg= #{triggerMsg,jdbcType=VARCHAR},
			executor_address= #{executorAddress,jdbcType=VARCHAR},
			executor_handler=#{executorHandler,jdbcType=VARCHAR},
			executor_param= #{executorParam,jdbcType=VARCHAR},
			executor_sharding_param= #{executorShardingParam,jdbcType=VARCHAR},
			executor_fail_retry_count= #{executorFailRetryCount,jdbcType=INTEGER}
		WHERE id= #{id,jdbcType=INTEGER}
	</update>

	<update id="updateHandleInfo">
		UPDATE SZBDC_TRIGGER_LOG
		SET 
			handle_time= #{handleTime,jdbcType=TIMESTAMP}, 
			handle_code= #{handleCode,jdbcType=INTEGER},
			handle_msg= #{handleMsg,jdbcType=VARCHAR} 
		WHERE id= #{id}
	</update>
	
	<delete id="delete" >
		delete from SZBDC_TRIGGER_LOG
		WHERE job_id = #{jobId}
	</delete>

	<select id="triggerCountByHandleCode" resultType="int" >
		SELECT count(1)
		FROM SZBDC_TRIGGER_LOG t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="handleCode gt 0">
				AND t.handle_code = #{handleCode}
			</if>
		</trim>
	</select>

    <select id="triggerCountByDay" resultType="java.util.Map" >
		SELECT
			TO_CHAR(trigger_time,'YYYY-MM-DD') triggerDay,
			COUNT(handle_code) triggerDayCount,
			SUM(CASE WHEN (trigger_code in (0, 200) and handle_code = 0) then 1 else 0 end) triggerDayCountRunning,
			SUM(CASE WHEN handle_code = 200 then 1 else 0 end) triggerDayCountSuc
		FROM SZBDC_TRIGGER_LOG
		WHERE trigger_time BETWEEN #{from} and #{to}
		GROUP BY trigger_time
    </select>

	<delete id="clearLog" >
		delete from SZBDC_TRIGGER_LOG
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup gt 0">
				AND job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND job_id = #{jobId}
			</if>
			<if test="clearBeforeTime != null">
				AND trigger_time <![CDATA[ <= ]]> #{clearBeforeTime}
			</if>
			<if test="clearBeforeNum gt 0">
				AND id NOT in(
					SELECT id FROM(
						SELECT id FROM SZBDC_TRIGGER_LOG t
						<trim prefix="WHERE" prefixOverrides="AND | OR" >
							<if test="jobGroup gt 0">
								AND t.job_group = #{jobGroup}
							</if>
							<if test="jobId gt 0">
								AND t.job_id = #{jobId}
							</if>
						</trim>
						ORDER BY t.trigger_time desc
						LIMIT 0, #{clearBeforeNum}
					) t1
				)
			</if>
		</trim>
	</delete>

	<select id="findFailJobLogIds" resultType="java.lang.Long" >
		SELECT id FROM SZBDC_TRIGGER_LOG
		WHERE NOT(
			(trigger_code in (0, 200) and handle_code = 0)
			OR
			(handle_code = 200)
		)
		AND alarm_status = 0
		ORDER BY id ASC
	</select>

	<update id="updateAlarmStatus" >
		UPDATE SZBDC_TRIGGER_LOG
		SET
			alarm_status = #{newAlarmStatus}
		WHERE id= #{logId} AND alarm_status = #{oldAlarmStatus}
	</update>
	
</mapper>